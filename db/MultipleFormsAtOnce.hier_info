|VGA
CLOCK_50 => PLL:C2.inclk0
CLOCK_50 => top:C3.ck50M
selAxis => SYNC:C1.dirXY
selAxis => top:C3.selectAxis
StartStop => SYNC:C1.StartStop
SPI_DI => top:C3.SPI_DI
hex0top[0] << top:C3.hex0top[0]
hex0top[1] << top:C3.hex0top[1]
hex0top[2] << top:C3.hex0top[2]
hex0top[3] << top:C3.hex0top[3]
hex0top[4] << top:C3.hex0top[4]
hex0top[5] << top:C3.hex0top[5]
hex0top[6] << top:C3.hex0top[6]
hex0top[7] << top:C3.hex0top[7]
hex1top[0] << top:C3.hex1top[0]
hex1top[1] << top:C3.hex1top[1]
hex1top[2] << top:C3.hex1top[2]
hex1top[3] << top:C3.hex1top[3]
hex1top[4] << top:C3.hex1top[4]
hex1top[5] << top:C3.hex1top[5]
hex1top[6] << top:C3.hex1top[6]
hex1top[7] << top:C3.hex1top[7]
hex2top[0] << top:C3.hex2top[0]
hex2top[1] << top:C3.hex2top[1]
hex2top[2] << top:C3.hex2top[2]
hex2top[3] << top:C3.hex2top[3]
hex2top[4] << top:C3.hex2top[4]
hex2top[5] << top:C3.hex2top[5]
hex2top[6] << top:C3.hex2top[6]
hex2top[7] << top:C3.hex2top[7]
hex3top[0] << top:C3.hex3top[0]
hex3top[1] << top:C3.hex3top[1]
hex3top[2] << top:C3.hex3top[2]
hex3top[3] << top:C3.hex3top[3]
hex3top[4] << top:C3.hex3top[4]
hex3top[5] << top:C3.hex3top[5]
hex3top[6] << top:C3.hex3top[6]
hex3top[7] << top:C3.hex3top[7]
hex4top[0] << top:C3.hex4top[0]
hex4top[1] << top:C3.hex4top[1]
hex4top[2] << top:C3.hex4top[2]
hex4top[3] << top:C3.hex4top[3]
hex4top[4] << top:C3.hex4top[4]
hex4top[5] << top:C3.hex4top[5]
hex4top[6] << top:C3.hex4top[6]
hex4top[7] << top:C3.hex4top[7]
hex5top[0] << top:C3.hex5top[0]
hex5top[1] << top:C3.hex5top[1]
hex5top[2] << top:C3.hex5top[2]
hex5top[3] << top:C3.hex5top[3]
hex5top[4] << top:C3.hex5top[4]
hex5top[5] << top:C3.hex5top[5]
hex5top[6] << top:C3.hex5top[6]
hex5top[7] << top:C3.hex5top[7]
SPI_DO << top:C3.SPI_DO
SPI_CS << top:C3.SPI_CS
SPI_CK << top:C3.SPI_CK
VGA_HS << SYNC:C1.HSYNC
VGA_VS << SYNC:C1.VSYNC
VGA_R[0] << SYNC:C1.R[0]
VGA_R[1] << SYNC:C1.R[1]
VGA_R[2] << SYNC:C1.R[2]
VGA_R[3] << SYNC:C1.R[3]
VGA_G[0] << SYNC:C1.G[0]
VGA_G[1] << SYNC:C1.G[1]
VGA_G[2] << SYNC:C1.G[2]
VGA_G[3] << SYNC:C1.G[3]
VGA_B[0] << SYNC:C1.B[0]
VGA_B[1] << SYNC:C1.B[1]
VGA_B[2] << SYNC:C1.B[2]
VGA_B[3] << SYNC:C1.B[3]


|VGA|SYNC:C1
clk => VPOS[0].CLK
clk => VPOS[1].CLK
clk => VPOS[2].CLK
clk => VPOS[3].CLK
clk => VPOS[4].CLK
clk => VPOS[5].CLK
clk => VPOS[6].CLK
clk => VPOS[7].CLK
clk => VPOS[8].CLK
clk => VPOS[9].CLK
clk => HPOS[0].CLK
clk => HPOS[1].CLK
clk => HPOS[2].CLK
clk => HPOS[3].CLK
clk => HPOS[4].CLK
clk => HPOS[5].CLK
clk => HPOS[6].CLK
clk => HPOS[7].CLK
clk => HPOS[8].CLK
clk => HPOS[9].CLK
clk => Bc[0].CLK
clk => Bc[1].CLK
clk => Bc[2].CLK
clk => Bc[3].CLK
clk => Gc[0].CLK
clk => Gc[1].CLK
clk => Gc[2].CLK
clk => Gc[3].CLK
clk => Rc[0].CLK
clk => Rc[1].CLK
clk => Rc[2].CLK
clk => Rc[3].CLK
clk => second_counter[0].CLK
clk => second_counter[1].CLK
clk => second_counter[2].CLK
clk => second_counter[3].CLK
clk => second_counter[4].CLK
clk => second_counter[5].CLK
clk => second_counter[6].CLK
clk => second_counter[7].CLK
clk => second_counter[8].CLK
clk => second_counter[9].CLK
clk => second_counter[10].CLK
clk => second_counter[11].CLK
clk => second_counter[12].CLK
clk => second_counter[13].CLK
clk => second_counter[14].CLK
clk => second_counter[15].CLK
clk => second_counter[16].CLK
clk => second_counter[17].CLK
clk => second_counter[18].CLK
clk => second_counter[19].CLK
clk => second_counter[20].CLK
clk => second_counter[21].CLK
clk => second_counter[22].CLK
clk => second_counter[23].CLK
clk => second_counter[24].CLK
clk => SN_Y[3].CLK
clk => SN_Y[4].CLK
clk => SN_Y[5].CLK
clk => SN_Y[6].CLK
clk => SN_Y[7].CLK
clk => SN_Y[8].CLK
clk => SN_Y[9].CLK
clk => SN_X[5].CLK
clk => SN_X[6].CLK
clk => SN_X[7].CLK
clk => SN_X[8].CLK
clk => SN_X[9].CLK
clk => cell_position[0].CLK
clk => cell_position[1].CLK
clk => cell_position[2].CLK
clk => cell_position[3].CLK
clk => cell_position[4].CLK
clk => APP_Y[0].CLK
clk => APP_Y[1].CLK
clk => APP_Y[2].CLK
clk => APP_Y[3].CLK
clk => APP_Y[4].CLK
clk => APP_Y[5].CLK
clk => APP_Y[6].CLK
clk => APP_Y[7].CLK
clk => APP_Y[8].CLK
clk => APP_Y[9].CLK
clk => APP_X[0].CLK
clk => APP_X[1].CLK
clk => APP_X[2].CLK
clk => APP_X[3].CLK
clk => APP_X[4].CLK
clk => APP_X[5].CLK
clk => APP_X[6].CLK
clk => APP_X[7].CLK
clk => APP_X[8].CLK
clk => APP_X[9].CLK
clk => boolP.CLK
clk => Points[0].CLK
clk => Points[1].CLK
clk => Points[2].CLK
clk => en.CLK
dirXY => SN_X.OUTPUTSELECT
dirXY => SN_X.OUTPUTSELECT
dirXY => SN_X.OUTPUTSELECT
dirXY => SN_X.OUTPUTSELECT
dirXY => SN_X.OUTPUTSELECT
dirXY => SN_Y.OUTPUTSELECT
dirXY => SN_Y.OUTPUTSELECT
dirXY => SN_Y.OUTPUTSELECT
dirXY => SN_Y.OUTPUTSELECT
dirXY => SN_Y.OUTPUTSELECT
dirXY => SN_Y.OUTPUTSELECT
dirXY => SN_Y.OUTPUTSELECT
resXY => SN_Y.OUTPUTSELECT
resXY => SN_Y.OUTPUTSELECT
resXY => SN_Y.OUTPUTSELECT
resXY => SN_Y.OUTPUTSELECT
resXY => SN_Y.OUTPUTSELECT
resXY => SN_Y.OUTPUTSELECT
resXY => SN_Y.OUTPUTSELECT
resXY => SN_X.OUTPUTSELECT
resXY => SN_X.OUTPUTSELECT
resXY => SN_X.OUTPUTSELECT
resXY => SN_X.OUTPUTSELECT
resXY => SN_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_X.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => APP_Y.OUTPUTSELECT
StartStop => cell_position.OUTPUTSELECT
StartStop => cell_position.OUTPUTSELECT
StartStop => cell_position.OUTPUTSELECT
StartStop => cell_position.OUTPUTSELECT
StartStop => cell_position.OUTPUTSELECT
StartStop => SN_X.OUTPUTSELECT
StartStop => SN_X.OUTPUTSELECT
StartStop => SN_X.OUTPUTSELECT
StartStop => SN_X.OUTPUTSELECT
StartStop => SN_X.OUTPUTSELECT
StartStop => SN_Y.OUTPUTSELECT
StartStop => SN_Y.OUTPUTSELECT
StartStop => SN_Y.OUTPUTSELECT
StartStop => SN_Y.OUTPUTSELECT
StartStop => SN_Y.OUTPUTSELECT
StartStop => SN_Y.OUTPUTSELECT
StartStop => SN_Y.OUTPUTSELECT
HSYNC <= process_1.DB_MAX_OUTPUT_PORT_TYPE
VSYNC <= process_1.DB_MAX_OUTPUT_PORT_TYPE
R[0] <= R.DB_MAX_OUTPUT_PORT_TYPE
R[1] <= R.DB_MAX_OUTPUT_PORT_TYPE
R[2] <= R.DB_MAX_OUTPUT_PORT_TYPE
R[3] <= R.DB_MAX_OUTPUT_PORT_TYPE
G[0] <= G.DB_MAX_OUTPUT_PORT_TYPE
G[1] <= G.DB_MAX_OUTPUT_PORT_TYPE
G[2] <= G.DB_MAX_OUTPUT_PORT_TYPE
G[3] <= G.DB_MAX_OUTPUT_PORT_TYPE
B[0] <= B.DB_MAX_OUTPUT_PORT_TYPE
B[1] <= B.DB_MAX_OUTPUT_PORT_TYPE
B[2] <= B.DB_MAX_OUTPUT_PORT_TYPE
B[3] <= B.DB_MAX_OUTPUT_PORT_TYPE


|VGA|SYNC:C1|RandomNumberGenerator:rnd_NB
clk => random_output[0]~reg0.CLK
clk => random_output[1]~reg0.CLK
clk => random_output[2]~reg0.CLK
clk => random_output[3]~reg0.CLK
clk => random_output[4]~reg0.CLK
clk => check[0].CLK
clk => check[1].CLK
clk => check[2].CLK
clk => check[3].CLK
clk => check[4].CLK
clk => rand_seed[0].CLK
clk => rand_seed[1].CLK
clk => rand_seed[2].CLK
clk => rand_seed[3].CLK
clk => rand_seed[4].CLK
clk => rand_seed[5].CLK
clk => rand_seed[6].CLK
clk => rand_seed[7].CLK
clk => rand_seed[8].CLK
clk => rand_seed[9].CLK
clk => rand_seed[10].CLK
clk => rand_seed[11].CLK
clk => rand_seed[12].CLK
clk => rand_seed[13].CLK
clk => rand_seed[14].CLK
clk => rand_seed[15].CLK
clk => rand_seed[16].CLK
clk => rand_seed[17].CLK
clk => rand_seed[18].CLK
clk => rand_seed[19].CLK
clk => rand_seed[20].CLK
clk => rand_seed[21].CLK
clk => rand_seed[22].CLK
clk => rand_seed[23].CLK
clk => rand_seed[24].CLK
clk => rand_seed[25].CLK
clk => rand_seed[26].CLK
clk => rand_seed[27].CLK
clk => rand_seed[28].CLK
clk => rand_seed[29].CLK
clk => rand_seed[30].CLK
clk => rand_seed[31].CLK
reset => rand_seed[0].ACLR
reset => rand_seed[1].PRESET
reset => rand_seed[2].ACLR
reset => rand_seed[3].PRESET
reset => rand_seed[4].ACLR
reset => rand_seed[5].PRESET
reset => rand_seed[6].ACLR
reset => rand_seed[7].ACLR
reset => rand_seed[8].ACLR
reset => rand_seed[9].ACLR
reset => rand_seed[10].ACLR
reset => rand_seed[11].ACLR
reset => rand_seed[12].ACLR
reset => rand_seed[13].ACLR
reset => rand_seed[14].ACLR
reset => rand_seed[15].ACLR
reset => rand_seed[16].ACLR
reset => rand_seed[17].ACLR
reset => rand_seed[18].ACLR
reset => rand_seed[19].ACLR
reset => rand_seed[20].ACLR
reset => rand_seed[21].ACLR
reset => rand_seed[22].ACLR
reset => rand_seed[23].ACLR
reset => rand_seed[24].ACLR
reset => rand_seed[25].ACLR
reset => rand_seed[26].ACLR
reset => rand_seed[27].ACLR
reset => rand_seed[28].ACLR
reset => rand_seed[29].ACLR
reset => rand_seed[30].ACLR
reset => rand_seed[31].ACLR
reset => random_output[0]~reg0.ENA
reset => check[4].ENA
reset => check[3].ENA
reset => check[2].ENA
reset => check[1].ENA
reset => check[0].ENA
reset => random_output[4]~reg0.ENA
reset => random_output[3]~reg0.ENA
reset => random_output[2]~reg0.ENA
reset => random_output[1]~reg0.ENA
en => check.OUTPUTSELECT
en => check.OUTPUTSELECT
en => check.OUTPUTSELECT
en => check.OUTPUTSELECT
en => check.OUTPUTSELECT
en => random_output.OUTPUTSELECT
en => random_output.OUTPUTSELECT
en => random_output.OUTPUTSELECT
en => random_output.OUTPUTSELECT
en => random_output.OUTPUTSELECT
en => rand_seed[31].ENA
en => rand_seed[30].ENA
en => rand_seed[29].ENA
en => rand_seed[28].ENA
en => rand_seed[27].ENA
en => rand_seed[26].ENA
en => rand_seed[25].ENA
en => rand_seed[24].ENA
en => rand_seed[23].ENA
en => rand_seed[22].ENA
en => rand_seed[21].ENA
en => rand_seed[20].ENA
en => rand_seed[19].ENA
en => rand_seed[18].ENA
en => rand_seed[17].ENA
en => rand_seed[16].ENA
en => rand_seed[15].ENA
en => rand_seed[14].ENA
en => rand_seed[13].ENA
en => rand_seed[12].ENA
en => rand_seed[11].ENA
en => rand_seed[10].ENA
en => rand_seed[9].ENA
en => rand_seed[8].ENA
en => rand_seed[7].ENA
en => rand_seed[6].ENA
en => rand_seed[5].ENA
en => rand_seed[4].ENA
en => rand_seed[3].ENA
en => rand_seed[2].ENA
en => rand_seed[1].ENA
en => rand_seed[0].ENA
position[0] => Add0.IN32
position[1] => Add0.IN31
position[2] => ~NO_FANOUT~
position[3] => ~NO_FANOUT~
position[4] => ~NO_FANOUT~
random_output[0] <= random_output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random_output[1] <= random_output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random_output[2] <= random_output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random_output[3] <= random_output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
random_output[4] <= random_output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|VGA|PLL:C2
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|VGA|PLL:C2|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= PLL_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|VGA|PLL:C2|altpll:altpll_component|PLL_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|VGA|top:C3
selectAxis => address.DATAB
selectAxis => Selector5.IN5
selectAxis => hex3top[4].DATAIN
selectAxis => address.DATAB
selectAxis => Selector17.IN4
selectAxis => Selector17.IN5
selectAxis => Selector17.IN6
selectAxis => Selector17.IN7
selectAxis => hex3top[3].DATAIN
reset => accelero:iacc.reset
reset => reg2[0].ACLR
reset => reg2[1].ACLR
reset => reg2[2].ACLR
reset => reg2[3].ACLR
reset => reg2[4].ACLR
reset => reg2[5].ACLR
reset => reg2[6].ACLR
reset => reg2[7].ACLR
reset => reg1[0].ACLR
reset => reg1[1].ACLR
reset => reg1[2].ACLR
reset => reg1[3].ACLR
reset => reg1[4].ACLR
reset => reg1[5].ACLR
reset => reg1[6].ACLR
reset => reg1[7].ACLR
reset => reg0[0].ACLR
reset => reg0[1].ACLR
reset => reg0[2].ACLR
reset => reg0[3].ACLR
reset => reg0[4].ACLR
reset => reg0[5].ACLR
reset => reg0[6].ACLR
reset => reg0[7].ACLR
reset => currentState~3.DATAIN
ck50M => accelero:iacc.ck50M
ck50M => reg2[0].CLK
ck50M => reg2[1].CLK
ck50M => reg2[2].CLK
ck50M => reg2[3].CLK
ck50M => reg2[4].CLK
ck50M => reg2[5].CLK
ck50M => reg2[6].CLK
ck50M => reg2[7].CLK
ck50M => reg1[0].CLK
ck50M => reg1[1].CLK
ck50M => reg1[2].CLK
ck50M => reg1[3].CLK
ck50M => reg1[4].CLK
ck50M => reg1[5].CLK
ck50M => reg1[6].CLK
ck50M => reg1[7].CLK
ck50M => reg0[0].CLK
ck50M => reg0[1].CLK
ck50M => reg0[2].CLK
ck50M => reg0[3].CLK
ck50M => reg0[4].CLK
ck50M => reg0[5].CLK
ck50M => reg0[6].CLK
ck50M => reg0[7].CLK
ck50M => currentState~1.DATAIN
SPI_DI => accelero:iacc.SPI_DI
hex0top[0] <= aff:iaff.hex0[0]
hex0top[1] <= aff:iaff.hex0[1]
hex0top[2] <= aff:iaff.hex0[2]
hex0top[3] <= aff:iaff.hex0[3]
hex0top[4] <= aff:iaff.hex0[4]
hex0top[5] <= aff:iaff.hex0[5]
hex0top[6] <= aff:iaff.hex0[6]
hex0top[7] <= aff:iaff.hex0[7]
hex1top[0] <= aff:iaff.hex1[0]
hex1top[1] <= aff:iaff.hex1[1]
hex1top[2] <= aff:iaff.hex1[2]
hex1top[3] <= aff:iaff.hex1[3]
hex1top[4] <= aff:iaff.hex1[4]
hex1top[5] <= aff:iaff.hex1[5]
hex1top[6] <= aff:iaff.hex1[6]
hex1top[7] <= aff:iaff.hex1[7]
hex2top[0] <= aff:iaff.hex2[0]
hex2top[1] <= aff:iaff.hex2[1]
hex2top[2] <= aff:iaff.hex2[2]
hex2top[3] <= aff:iaff.hex2[3]
hex2top[4] <= aff:iaff.hex2[4]
hex2top[5] <= aff:iaff.hex2[5]
hex2top[6] <= aff:iaff.hex2[6]
hex2top[7] <= aff:iaff.hex2[7]
hex3top[0] <= <VCC>
hex3top[1] <= <GND>
hex3top[2] <= <GND>
hex3top[3] <= selectAxis.DB_MAX_OUTPUT_PORT_TYPE
hex3top[4] <= selectAxis.DB_MAX_OUTPUT_PORT_TYPE
hex3top[5] <= <GND>
hex3top[6] <= <GND>
hex3top[7] <= <VCC>
hex4top[0] <= aff:iaff.hex4[0]
hex4top[1] <= aff:iaff.hex4[1]
hex4top[2] <= aff:iaff.hex4[2]
hex4top[3] <= aff:iaff.hex4[3]
hex4top[4] <= aff:iaff.hex4[4]
hex4top[5] <= aff:iaff.hex4[5]
hex4top[6] <= aff:iaff.hex4[6]
hex4top[7] <= aff:iaff.hex4[7]
hex5top[0] <= aff:iaff.hex5[0]
hex5top[1] <= aff:iaff.hex5[1]
hex5top[2] <= aff:iaff.hex5[2]
hex5top[3] <= aff:iaff.hex5[3]
hex5top[4] <= aff:iaff.hex5[4]
hex5top[5] <= aff:iaff.hex5[5]
hex5top[6] <= aff:iaff.hex5[6]
hex5top[7] <= aff:iaff.hex5[7]
SPI_DO <= accelero:iacc.SPI_DO
SPI_CS <= accelero:iacc.SPI_CS
SPI_CK <= accelero:iacc.SPI_CK
resOut <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|VGA|top:C3|aff:iaff
ch0[0] => Equal0.IN0
ch0[0] => Equal1.IN3
ch0[0] => Equal2.IN1
ch0[0] => Equal3.IN3
ch0[0] => Equal4.IN1
ch0[0] => Equal5.IN3
ch0[0] => Equal6.IN2
ch0[0] => Equal7.IN3
ch0[0] => Equal8.IN1
ch0[0] => Equal9.IN3
ch0[0] => Equal10.IN2
ch0[0] => Equal11.IN3
ch0[0] => Equal12.IN2
ch0[0] => Equal13.IN3
ch0[0] => Equal14.IN3
ch0[1] => Equal0.IN3
ch0[1] => Equal1.IN0
ch0[1] => Equal2.IN0
ch0[1] => Equal3.IN2
ch0[1] => Equal4.IN3
ch0[1] => Equal5.IN1
ch0[1] => Equal6.IN1
ch0[1] => Equal7.IN2
ch0[1] => Equal8.IN3
ch0[1] => Equal9.IN1
ch0[1] => Equal10.IN1
ch0[1] => Equal11.IN2
ch0[1] => Equal12.IN3
ch0[1] => Equal13.IN2
ch0[1] => Equal14.IN2
ch0[2] => Equal0.IN2
ch0[2] => Equal1.IN2
ch0[2] => Equal2.IN3
ch0[2] => Equal3.IN0
ch0[2] => Equal4.IN0
ch0[2] => Equal5.IN0
ch0[2] => Equal6.IN0
ch0[2] => Equal7.IN1
ch0[2] => Equal8.IN2
ch0[2] => Equal9.IN2
ch0[2] => Equal10.IN3
ch0[2] => Equal11.IN1
ch0[2] => Equal12.IN1
ch0[2] => Equal13.IN1
ch0[2] => Equal14.IN1
ch0[3] => Equal0.IN1
ch0[3] => Equal1.IN1
ch0[3] => Equal2.IN2
ch0[3] => Equal3.IN1
ch0[3] => Equal4.IN2
ch0[3] => Equal5.IN2
ch0[3] => Equal6.IN3
ch0[3] => Equal7.IN0
ch0[3] => Equal8.IN0
ch0[3] => Equal9.IN0
ch0[3] => Equal10.IN0
ch0[3] => Equal11.IN0
ch0[3] => Equal12.IN0
ch0[3] => Equal13.IN0
ch0[3] => Equal14.IN0
ch1[0] => Equal15.IN0
ch1[0] => Equal16.IN3
ch1[0] => Equal17.IN1
ch1[0] => Equal18.IN3
ch1[0] => Equal19.IN1
ch1[0] => Equal20.IN3
ch1[0] => Equal21.IN2
ch1[0] => Equal22.IN3
ch1[0] => Equal23.IN1
ch1[0] => Equal24.IN3
ch1[0] => Equal25.IN2
ch1[0] => Equal26.IN3
ch1[0] => Equal27.IN2
ch1[0] => Equal28.IN3
ch1[0] => Equal29.IN3
ch1[1] => Equal15.IN3
ch1[1] => Equal16.IN0
ch1[1] => Equal17.IN0
ch1[1] => Equal18.IN2
ch1[1] => Equal19.IN3
ch1[1] => Equal20.IN1
ch1[1] => Equal21.IN1
ch1[1] => Equal22.IN2
ch1[1] => Equal23.IN3
ch1[1] => Equal24.IN1
ch1[1] => Equal25.IN1
ch1[1] => Equal26.IN2
ch1[1] => Equal27.IN3
ch1[1] => Equal28.IN2
ch1[1] => Equal29.IN2
ch1[2] => Equal15.IN2
ch1[2] => Equal16.IN2
ch1[2] => Equal17.IN3
ch1[2] => Equal18.IN0
ch1[2] => Equal19.IN0
ch1[2] => Equal20.IN0
ch1[2] => Equal21.IN0
ch1[2] => Equal22.IN1
ch1[2] => Equal23.IN2
ch1[2] => Equal24.IN2
ch1[2] => Equal25.IN3
ch1[2] => Equal26.IN1
ch1[2] => Equal27.IN1
ch1[2] => Equal28.IN1
ch1[2] => Equal29.IN1
ch1[3] => Equal15.IN1
ch1[3] => Equal16.IN1
ch1[3] => Equal17.IN2
ch1[3] => Equal18.IN1
ch1[3] => Equal19.IN2
ch1[3] => Equal20.IN2
ch1[3] => Equal21.IN3
ch1[3] => Equal22.IN0
ch1[3] => Equal23.IN0
ch1[3] => Equal24.IN0
ch1[3] => Equal25.IN0
ch1[3] => Equal26.IN0
ch1[3] => Equal27.IN0
ch1[3] => Equal28.IN0
ch1[3] => Equal29.IN0
ch2[0] => Equal30.IN3
ch2[1] => Equal30.IN2
ch2[2] => Equal30.IN1
ch2[3] => Equal30.IN0
ch3[0] => Equal31.IN0
ch3[0] => Equal32.IN3
ch3[0] => Equal33.IN1
ch3[0] => Equal34.IN3
ch3[0] => Equal35.IN1
ch3[0] => Equal36.IN3
ch3[0] => Equal37.IN2
ch3[0] => Equal38.IN3
ch3[0] => Equal39.IN1
ch3[0] => Equal40.IN3
ch3[0] => Equal41.IN2
ch3[0] => Equal42.IN3
ch3[0] => Equal43.IN2
ch3[0] => Equal44.IN3
ch3[0] => Equal45.IN3
ch3[1] => Equal31.IN3
ch3[1] => Equal32.IN0
ch3[1] => Equal33.IN0
ch3[1] => Equal34.IN2
ch3[1] => Equal35.IN3
ch3[1] => Equal36.IN1
ch3[1] => Equal37.IN1
ch3[1] => Equal38.IN2
ch3[1] => Equal39.IN3
ch3[1] => Equal40.IN1
ch3[1] => Equal41.IN1
ch3[1] => Equal42.IN2
ch3[1] => Equal43.IN3
ch3[1] => Equal44.IN2
ch3[1] => Equal45.IN2
ch3[2] => Equal31.IN2
ch3[2] => Equal32.IN2
ch3[2] => Equal33.IN3
ch3[2] => Equal34.IN0
ch3[2] => Equal35.IN0
ch3[2] => Equal36.IN0
ch3[2] => Equal37.IN0
ch3[2] => Equal38.IN1
ch3[2] => Equal39.IN2
ch3[2] => Equal40.IN2
ch3[2] => Equal41.IN3
ch3[2] => Equal42.IN1
ch3[2] => Equal43.IN1
ch3[2] => Equal44.IN1
ch3[2] => Equal45.IN1
ch3[3] => Equal31.IN1
ch3[3] => Equal32.IN1
ch3[3] => Equal33.IN2
ch3[3] => Equal34.IN1
ch3[3] => Equal35.IN2
ch3[3] => Equal36.IN2
ch3[3] => Equal37.IN3
ch3[3] => Equal38.IN0
ch3[3] => Equal39.IN0
ch3[3] => Equal40.IN0
ch3[3] => Equal41.IN0
ch3[3] => Equal42.IN0
ch3[3] => Equal43.IN0
ch3[3] => Equal44.IN0
ch3[3] => Equal45.IN0
ch4[0] => Equal46.IN0
ch4[0] => Equal47.IN3
ch4[0] => Equal48.IN1
ch4[0] => Equal49.IN3
ch4[0] => Equal50.IN1
ch4[0] => Equal51.IN3
ch4[0] => Equal52.IN2
ch4[0] => Equal53.IN3
ch4[0] => Equal54.IN1
ch4[0] => Equal55.IN3
ch4[0] => Equal56.IN2
ch4[0] => Equal57.IN3
ch4[0] => Equal58.IN2
ch4[0] => Equal59.IN3
ch4[0] => Equal60.IN3
ch4[1] => Equal46.IN3
ch4[1] => Equal47.IN0
ch4[1] => Equal48.IN0
ch4[1] => Equal49.IN2
ch4[1] => Equal50.IN3
ch4[1] => Equal51.IN1
ch4[1] => Equal52.IN1
ch4[1] => Equal53.IN2
ch4[1] => Equal54.IN3
ch4[1] => Equal55.IN1
ch4[1] => Equal56.IN1
ch4[1] => Equal57.IN2
ch4[1] => Equal58.IN3
ch4[1] => Equal59.IN2
ch4[1] => Equal60.IN2
ch4[2] => Equal46.IN2
ch4[2] => Equal47.IN2
ch4[2] => Equal48.IN3
ch4[2] => Equal49.IN0
ch4[2] => Equal50.IN0
ch4[2] => Equal51.IN0
ch4[2] => Equal52.IN0
ch4[2] => Equal53.IN1
ch4[2] => Equal54.IN2
ch4[2] => Equal55.IN2
ch4[2] => Equal56.IN3
ch4[2] => Equal57.IN1
ch4[2] => Equal58.IN1
ch4[2] => Equal59.IN1
ch4[2] => Equal60.IN1
ch4[3] => Equal46.IN1
ch4[3] => Equal47.IN1
ch4[3] => Equal48.IN2
ch4[3] => Equal49.IN1
ch4[3] => Equal50.IN2
ch4[3] => Equal51.IN2
ch4[3] => Equal52.IN3
ch4[3] => Equal53.IN0
ch4[3] => Equal54.IN0
ch4[3] => Equal55.IN0
ch4[3] => Equal56.IN0
ch4[3] => Equal57.IN0
ch4[3] => Equal58.IN0
ch4[3] => Equal59.IN0
ch4[3] => Equal60.IN0
ch5[0] => Equal61.IN0
ch5[0] => Equal62.IN3
ch5[0] => Equal63.IN1
ch5[0] => Equal64.IN3
ch5[0] => Equal65.IN1
ch5[0] => Equal66.IN3
ch5[0] => Equal67.IN2
ch5[0] => Equal68.IN3
ch5[0] => Equal69.IN1
ch5[0] => Equal70.IN3
ch5[0] => Equal71.IN2
ch5[0] => Equal72.IN3
ch5[0] => Equal73.IN2
ch5[0] => Equal74.IN3
ch5[0] => Equal75.IN3
ch5[1] => Equal61.IN3
ch5[1] => Equal62.IN0
ch5[1] => Equal63.IN0
ch5[1] => Equal64.IN2
ch5[1] => Equal65.IN3
ch5[1] => Equal66.IN1
ch5[1] => Equal67.IN1
ch5[1] => Equal68.IN2
ch5[1] => Equal69.IN3
ch5[1] => Equal70.IN1
ch5[1] => Equal71.IN1
ch5[1] => Equal72.IN2
ch5[1] => Equal73.IN3
ch5[1] => Equal74.IN2
ch5[1] => Equal75.IN2
ch5[2] => Equal61.IN2
ch5[2] => Equal62.IN2
ch5[2] => Equal63.IN3
ch5[2] => Equal64.IN0
ch5[2] => Equal65.IN0
ch5[2] => Equal66.IN0
ch5[2] => Equal67.IN0
ch5[2] => Equal68.IN1
ch5[2] => Equal69.IN2
ch5[2] => Equal70.IN2
ch5[2] => Equal71.IN3
ch5[2] => Equal72.IN1
ch5[2] => Equal73.IN1
ch5[2] => Equal74.IN1
ch5[2] => Equal75.IN1
ch5[3] => Equal61.IN1
ch5[3] => Equal62.IN1
ch5[3] => Equal63.IN2
ch5[3] => Equal64.IN1
ch5[3] => Equal65.IN2
ch5[3] => Equal66.IN2
ch5[3] => Equal67.IN3
ch5[3] => Equal68.IN0
ch5[3] => Equal69.IN0
ch5[3] => Equal70.IN0
ch5[3] => Equal71.IN0
ch5[3] => Equal72.IN0
ch5[3] => Equal73.IN0
ch5[3] => Equal74.IN0
ch5[3] => Equal75.IN0
hex0[0] <= hex0.DB_MAX_OUTPUT_PORT_TYPE
hex0[1] <= hex0.DB_MAX_OUTPUT_PORT_TYPE
hex0[2] <= hex0.DB_MAX_OUTPUT_PORT_TYPE
hex0[3] <= hex0.DB_MAX_OUTPUT_PORT_TYPE
hex0[4] <= hex0.DB_MAX_OUTPUT_PORT_TYPE
hex0[5] <= hex0.DB_MAX_OUTPUT_PORT_TYPE
hex0[6] <= hex0.DB_MAX_OUTPUT_PORT_TYPE
hex0[7] <= <VCC>
hex1[0] <= hex1.DB_MAX_OUTPUT_PORT_TYPE
hex1[1] <= hex1.DB_MAX_OUTPUT_PORT_TYPE
hex1[2] <= hex1.DB_MAX_OUTPUT_PORT_TYPE
hex1[3] <= hex1.DB_MAX_OUTPUT_PORT_TYPE
hex1[4] <= hex1.DB_MAX_OUTPUT_PORT_TYPE
hex1[5] <= hex1.DB_MAX_OUTPUT_PORT_TYPE
hex1[6] <= hex1.DB_MAX_OUTPUT_PORT_TYPE
hex1[7] <= <VCC>
hex2[0] <= <VCC>
hex2[1] <= <VCC>
hex2[2] <= <VCC>
hex2[3] <= <VCC>
hex2[4] <= <VCC>
hex2[5] <= <VCC>
hex2[6] <= Equal30.DB_MAX_OUTPUT_PORT_TYPE
hex2[7] <= <VCC>
hex3[0] <= hex3.DB_MAX_OUTPUT_PORT_TYPE
hex3[1] <= hex3.DB_MAX_OUTPUT_PORT_TYPE
hex3[2] <= hex3.DB_MAX_OUTPUT_PORT_TYPE
hex3[3] <= hex3.DB_MAX_OUTPUT_PORT_TYPE
hex3[4] <= hex3.DB_MAX_OUTPUT_PORT_TYPE
hex3[5] <= hex3.DB_MAX_OUTPUT_PORT_TYPE
hex3[6] <= hex3.DB_MAX_OUTPUT_PORT_TYPE
hex3[7] <= <VCC>
hex4[0] <= hex4.DB_MAX_OUTPUT_PORT_TYPE
hex4[1] <= hex4.DB_MAX_OUTPUT_PORT_TYPE
hex4[2] <= hex4.DB_MAX_OUTPUT_PORT_TYPE
hex4[3] <= hex4.DB_MAX_OUTPUT_PORT_TYPE
hex4[4] <= hex4.DB_MAX_OUTPUT_PORT_TYPE
hex4[5] <= hex4.DB_MAX_OUTPUT_PORT_TYPE
hex4[6] <= hex4.DB_MAX_OUTPUT_PORT_TYPE
hex4[7] <= <VCC>
hex5[0] <= hex5.DB_MAX_OUTPUT_PORT_TYPE
hex5[1] <= hex5.DB_MAX_OUTPUT_PORT_TYPE
hex5[2] <= hex5.DB_MAX_OUTPUT_PORT_TYPE
hex5[3] <= hex5.DB_MAX_OUTPUT_PORT_TYPE
hex5[4] <= hex5.DB_MAX_OUTPUT_PORT_TYPE
hex5[5] <= hex5.DB_MAX_OUTPUT_PORT_TYPE
hex5[6] <= hex5.DB_MAX_OUTPUT_PORT_TYPE
hex5[7] <= <VCC>


|VGA|top:C3|accelero:iacc
reset => wvalue_reg[0].ACLR
reset => wvalue_reg[1].ACLR
reset => wvalue_reg[2].ACLR
reset => wvalue_reg[3].ACLR
reset => wvalue_reg[4].ACLR
reset => wvalue_reg[5].ACLR
reset => wvalue_reg[6].ACLR
reset => wvalue_reg[7].ACLR
reset => address_reg[0].ACLR
reset => address_reg[1].ACLR
reset => address_reg[2].ACLR
reset => address_reg[3].ACLR
reset => address_reg[4].ACLR
reset => address_reg[5].ACLR
reset => address_reg[6].ACLR
reset => address_reg[7].ACLR
reset => result_reg[0]~reg0.ACLR
reset => result_reg[1]~reg0.ACLR
reset => result_reg[2]~reg0.ACLR
reset => result_reg[3]~reg0.ACLR
reset => result_reg[4]~reg0.ACLR
reset => result_reg[5]~reg0.ACLR
reset => result_reg[6]~reg0.ACLR
reset => result_reg[7]~reg0.ACLR
reset => cpt1Mhz_reg[0].ACLR
reset => cpt1Mhz_reg[1].ACLR
reset => cpt1Mhz_reg[2].ACLR
reset => cpt1Mhz_reg[3].ACLR
reset => cpt1Mhz_reg[4].ACLR
reset => cpt1Mhz_reg[5].ACLR
reset => cpt1Mhz_reg[6].ACLR
reset => cpt1Mhz_reg[7].ACLR
reset => currentState~3.DATAIN
ck50M => wvalue_reg[0].CLK
ck50M => wvalue_reg[1].CLK
ck50M => wvalue_reg[2].CLK
ck50M => wvalue_reg[3].CLK
ck50M => wvalue_reg[4].CLK
ck50M => wvalue_reg[5].CLK
ck50M => wvalue_reg[6].CLK
ck50M => wvalue_reg[7].CLK
ck50M => address_reg[0].CLK
ck50M => address_reg[1].CLK
ck50M => address_reg[2].CLK
ck50M => address_reg[3].CLK
ck50M => address_reg[4].CLK
ck50M => address_reg[5].CLK
ck50M => address_reg[6].CLK
ck50M => address_reg[7].CLK
ck50M => result_reg[0]~reg0.CLK
ck50M => result_reg[1]~reg0.CLK
ck50M => result_reg[2]~reg0.CLK
ck50M => result_reg[3]~reg0.CLK
ck50M => result_reg[4]~reg0.CLK
ck50M => result_reg[5]~reg0.CLK
ck50M => result_reg[6]~reg0.CLK
ck50M => result_reg[7]~reg0.CLK
ck50M => cpt1Mhz_reg[0].CLK
ck50M => cpt1Mhz_reg[1].CLK
ck50M => cpt1Mhz_reg[2].CLK
ck50M => cpt1Mhz_reg[3].CLK
ck50M => cpt1Mhz_reg[4].CLK
ck50M => cpt1Mhz_reg[5].CLK
ck50M => cpt1Mhz_reg[6].CLK
ck50M => cpt1Mhz_reg[7].CLK
ck50M => currentState~1.DATAIN
start => address_mux.OUTPUTSELECT
start => address_mux.OUTPUTSELECT
start => address_mux.OUTPUTSELECT
start => address_mux.OUTPUTSELECT
start => address_mux.OUTPUTSELECT
start => address_mux.OUTPUTSELECT
start => address_mux.OUTPUTSELECT
start => address_mux.OUTPUTSELECT
start => wvalue_mux.OUTPUTSELECT
start => wvalue_mux.OUTPUTSELECT
start => wvalue_mux.OUTPUTSELECT
start => wvalue_mux.OUTPUTSELECT
start => wvalue_mux.OUTPUTSELECT
start => wvalue_mux.OUTPUTSELECT
start => wvalue_mux.OUTPUTSELECT
start => wvalue_mux.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
start => nextState.OUTPUTSELECT
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
Address[0] => address_mux.DATAB
Address[1] => address_mux.DATAB
Address[2] => address_mux.DATAB
Address[3] => address_mux.DATAB
Address[4] => address_mux.DATAB
Address[5] => address_mux.DATAB
Address[6] => address_mux.DATAB
Address[7] => address_mux.DATAB
wValue[0] => wvalue_mux.DATAB
wValue[1] => wvalue_mux.DATAB
wValue[2] => wvalue_mux.DATAB
wValue[3] => wvalue_mux.DATAB
wValue[4] => wvalue_mux.DATAB
wValue[5] => wvalue_mux.DATAB
wValue[6] => wvalue_mux.DATAB
wValue[7] => wvalue_mux.DATAB
result_reg[0] <> result_reg[0]~reg0
result_reg[1] <> result_reg[1]~reg0
result_reg[2] <> result_reg[2]~reg0
result_reg[3] <> result_reg[3]~reg0
result_reg[4] <> result_reg[4]~reg0
result_reg[5] <> result_reg[5]~reg0
result_reg[6] <> result_reg[6]~reg0
result_reg[7] <> result_reg[7]~reg0
SPI_DI => result_mux[7].DATAB
SPI_DI => result_mux[6].DATAB
SPI_DI => result_mux[5].DATAB
SPI_DI => result_mux[4].DATAB
SPI_DI => result_mux[3].DATAB
SPI_DI => result_mux[2].DATAB
SPI_DI => result_mux[1].DATAB
SPI_DI => result_mux[0].DATAB
SPI_DO <= Selector37.DB_MAX_OUTPUT_PORT_TYPE
SPI_CS <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
SPI_CK <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


